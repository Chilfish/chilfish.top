---
import type { GetStaticPaths } from 'astro'

import type { PostPage } from '~/types'
import PostTimeLine from '~/components/post/PostTimeLine.astro'
import { pageSize } from '~/constant/config'

import BlogListLayout from '~/layouts/BlogListLayout.astro'
import Layout from '~/layouts/Layout.astro'
import { getAllPosts } from '~/utils'

const url = Astro.url.pathname.split('/').filter(Boolean)

Astro.redirect(`/posts/${url[url.length - 1]}/`)
console.log(url)

export const prerender = true

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getAllPosts()
  const [blogs, notes] = posts
  return [
    ...paginate(blogs, {
      pageSize,
      params: {
        type: 'blog',
      },
    }),
    ...paginate(notes, {
      pageSize: 1000,
      params: {
        type: 'note',
      },
    }),
  ]
}) satisfies GetStaticPaths

type Props = {
  page: PostPage
}

const { page } = Astro.props
const { type } = Astro.params
---

{
  type === 'blog'
    ? (
      <BlogListLayout
        page={page}
        title="Blogs"
        h1={`共有 ${page.total} 篇文章`}
      />
    )
    : (
      <Layout title="Notes timeline">
        <PostTimeLine
          title="一些笔记们"
          posts={page.data}
        />
      </Layout>
    )
}
