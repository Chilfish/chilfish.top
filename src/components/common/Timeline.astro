---
import { formatDate } from '~/utils'

interface Post {
  title: string
  href: string
  time: Date | string
}

interface Props {
  timelines: Post[]
}

const { timelines } = Astro.props

const posts: {
  year: number
  posts: Post[]
}[] = []

const years = new Set(timelines.map(({ time }) => new Date(time).getFullYear()))

years.forEach((year) => {
  const postsInYear = timelines.filter(({ time }) => new Date(time).getFullYear() === year)
  posts.push({
    year,
    posts: postsInYear,
  })
})
---

<ul class="timelines mx-auto center-col gap-2 px-6 transition-width sm:w-72ch">
  { posts.map(data => (
    <>
      <h2 class="year-title">
        {data.year}, {data.posts.length}ç¯‡
      </h2>
      { data.posts.map(({ title, href, time }, idx, posts) => (
        <li class="timeline">
          <div class="timeline-dot">
            <span class="dot" />
            {idx < posts.length - 1 && <span class="line" />}
          </div>

          <div class="timeline-content">
            <a href={href}>{title}</a>
            <time>{formatDate(time)}</time>
          </div>
        </li>
      ))}
    </>
  ))}
</ul>

<style lang="scss">
h2.year-title {
  @apply: mt-6 text-5 w-full text-start font-bold;
}

li.timeline {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
  gap: 0.5rem;

}
.timeline-dot {
  position: absolute;
  left: 0;
  top: 8px;
  height: 100%;
  display: flex;
  justify-content: center;

  .dot {
    position: absolute;
    top: 0;
    height: 10px;
    width: 10px;
    border-radius: 9999px;
    @apply: bg-primary;
  }

  .line {
    position: absolute;
    top: 0.5rem;
    height: 100%;
    width: 2px;
    left: -1px;
    @apply: bg-primary;
  }
}

.timeline-content {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  font-size: 14px;
  margin-left: 1rem;

  a:hover {
    text-decoration: underline;
  }

  time {
    margin-left: 0.5rem;
    min-width: fit-content;
  }
}
</style>
